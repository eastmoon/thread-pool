# Declare cmake information
cmake_minimum_required(VERSION 2.8.10)
project(${APPLICATION_NAME})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${APPLICATION_PUBLISH_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${APPLICATION_PUBLISH_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${APPLICATION_PUBLISH_DIR}/bin)

# Show cmake infromation
message("APPLICATION_NAME= ${APPLICATION_NAME}")
message("APPLICATION_SOURCE_DIR= ${APPLICATION_SOURCE_DIR}")
message("CMAKE_ARCHIVE_OUTPUT_DIRECTORY= ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}")
message("CMAKE_LIBRARY_OUTPUT_DIRECTORY= ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
message("CMAKE_RUNTIME_OUTPUT_DIRECTORY= ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")

# Add library & classes
file(
    GLOB
    includes_library
    "${APPLICATION_SOURCE_DIR}/app/*/*.cpp"
    "${APPLICATION_SOURCE_DIR}/app/*/*.h"
)

# Add source code in project
add_executable(
    ${APPLICATION_NAME}
    ${APPLICATION_SOURCE_DIR}/main.cpp
    ${includes_library}
)

# Add thread package
find_package(Threads REQUIRED)
if(THREADS_HAVE_PTHREAD_ARG)
  set_property(TARGET ${APPLICATION_NAME} PROPERTY COMPILE_OPTIONS "-pthread")
  set_property(TARGET ${APPLICATION_NAME} PROPERTY INTERFACE_COMPILE_OPTIONS "-pthread")
endif()
if(CMAKE_THREAD_LIBS_INIT)
  target_link_libraries(${APPLICATION_NAME} "${CMAKE_THREAD_LIBS_INIT}")
endif()
